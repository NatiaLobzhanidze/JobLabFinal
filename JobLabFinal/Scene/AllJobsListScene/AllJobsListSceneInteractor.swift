//
//  AllJobsListSceneInteractor.swift
//  JobLabFinal
//
//  Created by Natia's Mac on 12.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AllJobsListSceneBusinessLogic {

    func getAllJobs(request: AllJobsListScene.GetAllJobs.Request)
    func getFilteredJobs(request: AllJobsListScene.FilterJobs.Request)
    func seeJobDetails(request: AllJobsListScene.SeeJobDetails.Request)
}

protocol AllJobsListSceneDataStore {
    var myJobModel: [JobModel] { get }
    var selectedJob: JobModel? { get }
}

final class AllJobsListSceneInteractor: AllJobsListSceneDataStore {

    // MARK: Clean components

    var presenter: AllJobsListScenePresentationLogic?

    var myJobModel: [JobModel]
    var selectedJob: JobModel?

    // MARK: Object LifeCycle

    init(presenter: AllJobsListScenePresentationLogic, myJobModel: [JobModel]) {
        self.presenter = presenter
        self.myJobModel = myJobModel
    }
}

extension AllJobsListSceneInteractor: AllJobsListSceneBusinessLogic {

    func seeJobDetails(request: AllJobsListScene.SeeJobDetails.Request) {
        self.selectedJob = request.data
        presenter?.presentJobDetails(response: AllJobsListScene.SeeJobDetails.Response())
    }

    func getFilteredJobs(request: AllJobsListScene.FilterJobs.Request) {

        if let request = request.keyword {
            let filteredJobs = myJobModel.filter({$0.jobTitle.lowercased().contains(request.lowercased()) })
            let data = !request.isEmpty ? filteredJobs : myJobModel
            presenter?.presentFilteredJobs(response: HomeScene.FilterJobs.Response(data: data))
        }
        if let category = request.category {
            let  filteredJobs = myJobModel.filter({$0.category.lowercased().contains(category.lowercased()) })
            let data = category == "All Jobs" ? myJobModel : filteredJobs
            presenter?.presentFilteredJobs(response: HomeScene.FilterJobs.Response(data: data))
        }
    }

    func getAllJobs(request: AllJobsListScene.GetAllJobs.Request) {
        let response = AllJobsListScene.GetAllJobs.Response(data: self.myJobModel)
        presenter?.presentAllJobs(response: response)
    }
}
