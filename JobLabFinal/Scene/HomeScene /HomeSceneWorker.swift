//
//  HomeSceneWorker.swift
//  JobLabFinal
//
//  Created by Natia's Mac on 07.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Firebase
import FirebaseAuth
import CoreData

protocol HomeSceneWorkerLogic {
    func fetchTips() async throws -> [TipsModel]
    func fetchAllJobs()async throws -> [JobModel]
    func fetchFavorites() -> [String?]
 
}

final class HomeSceneWorker {
    
    //MARK: Fields
    
    private let api: APIManager
    private let tipsUrl = ApiUrls.tips.rawValue
    private let jobsUrl = ApiUrls.jobs.rawValue
    private let coreDataManager = CoreDataManaager.shared
    
    init(api: APIManager) {
        self.api = api
    }
}

  //MARK: WorkerLogic methods

extension HomeSceneWorker: HomeSceneWorkerLogic {
    func fetchFavorites() -> [String?] {
        var indetities = [String?]()
        coreDataManager.featchFavorites(fromEntity: "Favorites", by: "isFavorite == true") { nsObject in
            nsObject.forEach { object in
                if let object = object as? Favorites {
                    indetities.append(object.identity)
                }
            }
        }
        return  indetities
    }
    
    
    func fetchTips() async throws -> [TipsModel] {
        try await api.fetchData(urlString: tipsUrl, decodingType: [TipsModel].self)
    }
    
    func fetchAllJobs() async throws -> [JobModel] {
        try await api.fetchData(urlString: jobsUrl, decodingType: [JobModel].self)
    }
    
}
