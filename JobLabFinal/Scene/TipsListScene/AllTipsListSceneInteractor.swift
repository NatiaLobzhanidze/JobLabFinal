//
//  AllTipsListSceneInteractor.swift
//  JobLabFinal
//
//  Created by Natia's Mac on 11.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AllTipsListSceneBusinessLogic
{
    func getAllTips(request: AllTipsListScene.ShowAllTipsList.Request)
    func seeTipsDetails(request: AllTipsListScene.SeeDetails.Request )
}

protocol AllTipsListSceneDataStore
{
    var selectedTip: TipsModel? { get }
}

class AllTipsListSceneInteractor:  AllTipsListSceneDataStore
{
  var presenter: AllTipsListScenePresentationLogic?
    private(set) var passedObject: [TipsModel]
    var selectedTip: TipsModel?

  
  // MARK: Object LifeCycle
    
    init(presenter: AllTipsListScenePresentationLogic,passedObject: [TipsModel] ) {
        self.presenter = presenter
        self.passedObject = passedObject
    }
  
 
  
}

extension AllTipsListSceneInteractor: AllTipsListSceneBusinessLogic {
    
    func getAllTips(request: AllTipsListScene.ShowAllTipsList.Request) {
      
        let response = AllTipsListScene.ShowAllTipsList.Response(data: self.passedObject)
        self.presenter?.presentAllTipsList(response: response)
    }
    
    func seeTipsDetails(request: AllTipsListScene.SeeDetails.Request) {
        self.selectedTip = request.data
        self.presenter?.presentTipsDetails(response: AllTipsListScene.SeeDetails.Response())
    }
}
