//
//  BottomSheetViewController.swift
//  JobLabFinal
//
//  Created by Natia's Mac on 05.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BottomSheetDisplayLogic: AnyObject
{
    //  func displaySomething(viewModel: BottomSheet.Something.ViewModel)
}

class BottomSheetViewController: UIViewController, BottomSheetDisplayLogic
{
    
    
    let topView: UIView = {
        let view = UIView()
        view.isUserInteractionEnabled = true
        view.backgroundColor = .clear
        return view
    }()
    let topDarkLine: UIView = {
        let view = UIView()
        view.backgroundColor = .darkGray
        view.layer.cornerRadius = 3
        return view
    }()
    
    
    let iWantJobView: UIView = {
        let view = UIView()
        view.backgroundColor = .white
        view.shadowedtoView()
        return view
    }()
    
    let iWantEmployeeView: UIView = {
        let view = UIView()
        view.backgroundColor = .white
        view.shadowedtoView()
        return view
    }()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white
        setupViews()
        addTapGesturesonView()
    }
    
    func setupViews() {
        view.addSubview(topView)
        
        topView.fillSuperview()
        topView.addSubview(topDarkLine)
        topDarkLine.anchor(top: view.topAnchor, paddingTop: 12, height: 6)
        topDarkLine.setWidth(60)
        topDarkLine.centerX(inView: view)
        
        topView.addSubview(topDarkLine)
        topDarkLine.anchor(top: view.topAnchor, paddingTop: 12, height: 6)
        topDarkLine.setWidth(60)
        topDarkLine.centerX(inView: view)
        let bottview = topView.addTitleOnBsheet(with: "person.crop.square.fill", title: "What are you looking for?")
        topView.addSubview(bottview)
        setupInnerViews(myview: bottview)
        //            topView.addCells(after: bottview)
    }
    
    func setupInnerViews(myview: UIView) {
        topView.addSubview(iWantJobView)
        let viewWidth = ( UIScreen.main.bounds.width - 90 ) / 2
        iWantJobView.anchor(top: myview.bottomAnchor, left: topView.leftAnchor,  paddingTop: 20, paddingLeft: 30,  width: viewWidth, height: viewWidth)
        let jobWantContent = iWantJobView.makeView(with: "person.crop.square.fill", textlabl: "I want a job")
        iWantJobView.addSubview(jobWantContent)
        jobWantContent.anchor(top: iWantJobView.topAnchor,
                              left: iWantJobView.leftAnchor,
                              bottom: iWantJobView.bottomAnchor,
                              right: iWantJobView.rightAnchor,
                              paddingTop: 5, paddingLeft: 5,
                              paddingBottom: 5, paddingRight: 5)
        
        topView.addSubview(iWantEmployeeView)
        
        iWantEmployeeView.anchor(top: iWantJobView.topAnchor, left: iWantJobView.rightAnchor, right: topView.rightAnchor, paddingTop: 0, paddingLeft: 30,  paddingRight: 30 , height: viewWidth)
        let employeeWantContent = iWantJobView.makeView(with: "person.crop.square.fill", textlabl: "I want an employee")
        iWantEmployeeView.addSubview(employeeWantContent)
        employeeWantContent.anchor(top: iWantEmployeeView.topAnchor,
                                   left: iWantEmployeeView.leftAnchor,
                                   bottom: iWantEmployeeView.bottomAnchor,
                                   right: iWantEmployeeView.rightAnchor,
                                   paddingTop: 5, paddingLeft: 5,
                                   paddingBottom: 5, paddingRight: 5)
        
    }
    
    func addTapGesturesonView() {
        let tapemployee = UITapGestureRecognizer(target: self, action: #selector(self.handleTap(_:)))
        let tap = UITapGestureRecognizer(target: self, action: #selector(self.handleTap(_:)))
        iWantEmployeeView.addGestureRecognizer(tapemployee)
        iWantJobView.addGestureRecognizer(tap)
    }
    @objc func handleTap(_ gesture: UITapGestureRecognizer) {
        print("its ok tap")
        let vc = CategoriesViewController()
        vc.modalPresentationStyle = .fullScreen
        
        self.present(vc, animated: true, completion: nil)
        
    }

    
}


