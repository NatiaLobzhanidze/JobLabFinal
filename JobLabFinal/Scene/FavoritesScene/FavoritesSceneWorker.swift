//
//  FavoritesSceneWorker.swift
//  JobLabFinal
//
//  Created by Natia's Mac on 18.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

enum WrokerTitles: String {
    case entityName = "Favorites"
    case predicatebyFavorites = "isFavorite == true"
}

protocol FavoritesSceneWorkerLogic {
    func fetchFavoriteJobs() async -> [JobModel]
    func  deleteAll()
}

final class FavoritesSceneWorker {
    
    //MARK: Fields
    
    private var coreDataManager: CoreDataManaager
    private var api = APIManager.shared
    private let jobsUrl = ApiUrls.jobs.rawValue
    private var identities = [String]()
    init(coreDataManager: CoreDataManaager) {
        self.coreDataManager = coreDataManager
    }
    func fetchFavorites() -> [String] {
        var identities = [String]()
        coreDataManager.featchFavorites(fromEntity: WrokerTitles.entityName.rawValue, by: WrokerTitles.predicatebyFavorites.rawValue) { nsObjects in
            identities = nsObjects.compactMap{($0 as? Favorites)?.identity}
        }
        return identities
    }
}

extension FavoritesSceneWorker : FavoritesSceneWorkerLogic {
    
    func fetchFavoriteJobs() async -> [JobModel] {
        var favJobs = [JobModel]()
        do {
            favJobs = try await api.fetchData(urlString: jobsUrl, decodingType: [JobModel].self)
            DispatchQueue.main.async { [weak self] in
                guard let res = self?.fetchFavorites() else { return }
                self?.identities = res
            }
        } catch {
            print(error.localizedDescription)
        }
        return favJobs.filter({identities.contains($0.ident)})
    }
    
    func deleteAll() {
        coreDataManager.deleteAllData(entity: WrokerTitles.entityName.rawValue)
    }
}
