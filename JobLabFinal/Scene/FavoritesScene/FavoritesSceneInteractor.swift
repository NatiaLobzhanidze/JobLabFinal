//
//  FavoritesSceneInteractor.swift
//  JobLabFinal
//
//  Created by Natia's Mac on 18.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData


protocol FavoritesSceneBusinessLogic {
    func getFavorites(request: FavoritesScene.GetFavoriteJobs.Request)
    func deleteAllDAta(request: FavoritesScene.DeleteAll.Request)
}

protocol FavoritesSceneDataStore {
}

final class FavoritesSceneInteractor:  FavoritesSceneDataStore {
    
    //MARK: Clean components

  var presenter: FavoritesScenePresentationLogic?
  var worker: FavoritesSceneWorker?
    
    //MARK: Fields
  var container = [JobModel]()
  
  // MARK: object LifeCycle
    
    init(presenter: FavoritesScenePresentationLogic, worker: FavoritesSceneWorker) {
        self.presenter = presenter
        self.worker = worker
    }
}

extension FavoritesSceneInteractor: FavoritesSceneBusinessLogic {
    
    func deleteAllDAta(request: FavoritesScene.DeleteAll.Request) {
        worker?.deleteAll()
        presenter?.presentDeleting(response: FavoritesScene.DeleteAll.Response())
    }
    
    func getFavorites(request: FavoritesScene.GetFavoriteJobs.Request) {
        Task {
            guard let favoriteJobs = await worker?.fetchFavoriteJobs() else { return }
            self.container = favoriteJobs
            presenter?.presentFavorites(response: FavoritesScene.GetFavoriteJobs.Response(data: container))
        }
       
    }
    
    
}
