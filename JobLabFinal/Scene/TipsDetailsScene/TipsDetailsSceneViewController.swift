//
//  TipsDetailsSceneViewController.swift
//  JobLabFinal
//
//  Created by Natia's Mac on 11.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TipsDetailsSceneDisplayLogic: AnyObject
{
    func displayDetails(viewModel: TipsDetailsScene.Details.ViewModel)
}

class TipsDetailsSceneViewController: UIViewController {
    // MARK: - Clean Components
    
    var interactor: TipsDetailsSceneBusinessLogic?
    var router: (TipsDetailsSceneRoutingLogic & TipsDetailsSceneDataPassing)?
    
    // MARK: - View
    let banner: UIImageView = {
        let img = UIImageView()
        img.contentMode = .scaleAspectFill
       
        
        return img
    }()
    
   lazy var tipTitle: UILabel = {
        let lb = UILabel()
       lb.textColor = .white
       lb.textAlignment = .right
       lb.numberOfLines = 0
       lb.font = .systemFont(ofSize: 21, weight: .semibold)
        return lb
    }()
  lazy  var lineView: UIView = {
      let tiptitlewidht = Int(tipTitle.bounds.size.width)
      let v = UIView()
      v.setDimensions(height: 3, width: 100)
      v.backgroundColor = .white
      
      return v
    }()
    let author: UILabel = {
        let lb = UILabel()
        lb.textColor = .white
        lb.textAlignment = .right
        lb.font = .systemFont(ofSize: 19, weight: .medium)
        lb.numberOfLines = 0
        return lb
    }()
    let occupation: UILabel = {
        let lb = UILabel()
        lb.textColor = .white
        lb.textAlignment = .right
        lb.numberOfLines = 0
        return lb
    }()
    
    var textTitle: UILabel = {
        let lb = UILabel()
        lb.textColor = .black
        lb.font = .systemFont(ofSize: 24, weight: .semibold)
        lb.numberOfLines = 0

        return lb
    }()
    let article: UITextView = {
        let txt = UITextView()
        txt.contentMode = .scaleAspectFill
        txt.font = .systemFont(ofSize: 16, weight: .semibold)
        txt.isUserInteractionEnabled = false
        return txt
    }()
    // MARK: Object lifecycle
    
    init(interactor: TipsDetailsSceneBusinessLogic,
         router: (TipsDetailsSceneRoutingLogic & TipsDetailsSceneDataPassing)) {
        self.interactor = interactor
        self.router = router
        super.init(nibName: nil, bundle: nil)
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        view.backgroundColor = .white
        title = "Tips for you"
        setUpView()
        interactor?.getDetails(request: TipsDetailsScene.Details.Request())
    }
    
    // MARK: Set up view
    
    private func setUpView() {
        view.addSubview(banner)
        banner.anchor(top: view.safeAreaLayoutGuide.topAnchor, left: view.leftAnchor,  right: view.rightAnchor, paddingTop: 20, paddingLeft: 30, paddingRight: 30,  height: 200)
        
        let stackview = UIStackView(arrangedSubviews: [tipTitle,lineView, author, occupation ])
        stackview.axis = .vertical
        stackview.alignment = .trailing
        stackview.distribution = .equalSpacing
        view.addSubview(stackview)
        stackview.anchor(top: banner.topAnchor, right: banner.rightAnchor, paddingTop: 0, paddingRight: 15, width: 160 ,height: 200)
        view.addSubview(textTitle)
        textTitle.anchor(top: banner.bottomAnchor, left: view.leftAnchor, right: view.rightAnchor, paddingTop: 20, paddingLeft: 40, paddingRight: 40, height: 90)
       
        view.addSubview(article)
        article.anchor(top: textTitle.bottomAnchor, left: view.leftAnchor, bottom: view.bottomAnchor, right: view.rightAnchor, paddingTop: 20, paddingLeft: 20, paddingBottom: 20, paddingRight: 20)
        
    }
}
extension TipsDetailsSceneViewController :  TipsDetailsSceneDisplayLogic {
    func displayDetails(viewModel: TipsDetailsScene.Details.ViewModel) {
        let model = viewModel.tipDetails
        self.textTitle.text = model.title
        self.banner.load(url: URL(string: model.cover)!)
        
        self.author.text = model.author
        self.occupation.text = model.authorOccupation
        self.tipTitle.text = model.title
        self.article.text = model.text
       
    }
    
    
}
