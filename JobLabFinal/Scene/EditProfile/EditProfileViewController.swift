//
//  EditProfileViewController.swift
//  JobLabFinal
//
//  Created by Natia's Mac on 06.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EditProfileDisplayLogic: AnyObject
{
  func displayHomeScreen(viewModel: EditProfile.Something.ViewModel)
   
}

class EditProfileViewController: UIViewController, EditProfileDisplayLogic
{
    func displayHomeScreen(viewModel: EditProfile.Something.ViewModel) {
        router?.navigateToHomeScene()
    }
    
  var interactor: EditProfileBusinessLogic?
  var router: (NSObjectProtocol & EditProfileRoutingLogic & EditProfileDataPassing)?
    
    //MARK: UI Elements
 
    let logoButton: UIButton = {
        let btn = UIButton()
        btn.setImage(UIImage(systemName: "person.crop.square.fill"), for: .normal)
        btn.tintColor = hexStringToUIColor(hex: "#5583F7")
        return btn
    }()
    
    let headLineLB: UILabel = {
        let lb = UILabel()
        lb.text = "Profile"
        
        return lb
    }()
    
    let profileImage: UIImageView = {
        let img = UIImageView()
        img.image = UIImage(systemName: "icloud.and.arrow.down")
        
        return img
        
    }()
    
    lazy var tableView: UITableView = {
        let v = UITableView()
        
        v.registerClass(class: ProfileEdditorableViewCell.self)
        v.separatorStyle = .none
        return v
    }()
    
    lazy var confirme: UIButton = {
        let btn = UIButton()
        btn.setTitle("Confirme", for: .normal)
        btn.backgroundColor = hexStringToUIColor(hex: "#5583F7")
        btn.layer.cornerRadius = 20
        btn.addTarget(self, action: #selector(confirmeInfo), for: .touchUpInside)
        
        return btn
    }()

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = EditProfileInteractor()
    let presenter = EditProfilePresenter()
    let router = EditProfileRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
    
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()

      view.backgroundColor = .white
      title = "Profile"
      setUpView()
      tableView.dataSource = self
      tableView.delegate = self
  }
  
  // MARK: Do something
    func setUpView() {
        view.addSubview(profileImage)
        profileImage.anchor(top: view.safeAreaLayoutGuide.topAnchor,  paddingTop: 29,   width: 100, height: 100)
        profileImage.centerX(inView: view)
        profileImage.tintColor = .blue
        view.addSubview(tableView)
        tableView.anchor(top: profileImage.bottomAnchor, left: view.leftAnchor,  right: view.rightAnchor, paddingTop: 20, paddingLeft: 0,  paddingRight: 0)
        view.addSubview(confirme)
        
        confirme.anchor( top: tableView.bottomAnchor , left: view.leftAnchor, bottom: view.bottomAnchor, right: view.rightAnchor,  paddingTop: 20, paddingLeft: 30, paddingBottom: 40, paddingRight: 30, height: 45)
        addTopAndBottomBorders()
    }
  
 
    func addTopAndBottomBorders() {
       let thickness: CGFloat = 2.0
       let topBorder = CALayer()
       topBorder.frame = CGRect(x: 0.0, y: 0.0, width: self.tableView.frame.size.width, height: thickness)
       topBorder.backgroundColor = UIColor.red.cgColor
       tableView.layer.addSublayer(topBorder)
     
    }
    @objc func confirmeInfo() {
        interactor?.tapToConfirmeBtn(request: EditProfile.Something.Request())
    }
}

extension EditProfileViewController : UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        ProfileModel.filedsArray.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.deque(class: ProfileEdditorableViewCell.self, for: indexPath)
        cell.configure(with: ProfileModel.filedsArray[indexPath.row])
        if ProfileModel.filedsArray[indexPath.row] == "Date of birth" {
            cell.createDatePicker(for: cell.tField)
        }
        cell.selectionStyle = .none
        return cell
    }
    
    
}
